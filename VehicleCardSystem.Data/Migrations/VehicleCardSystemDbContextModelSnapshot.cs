// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VehicleCardSystem.Data;

#nullable disable

namespace VehicleCardSystem.Data.Migrations
{
    [DbContext(typeof(VehicleCardSystemDbContext))]
    partial class VehicleCardSystemDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.7");

            modelBuilder.Entity("VehicleCardSystem.Core.Models.Vehicle", b =>
                {
                    b.Property<Guid>("VehicleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("VEHICLEID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasColumnName("COLOR");

                    b.Property<int>("ModelYear")
                        .HasColumnType("INTEGER")
                        .HasColumnName("MODELYEAR");

                    b.Property<string>("Plate")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT")
                        .HasColumnName("PLATE");
   

                    b.Property<Guid>("VehicletypeId")
                        .HasColumnType("TEXT")
                        .HasColumnName("VEHICLETYPEID");

                    b.HasKey("VehicleId");

                    b.HasIndex("VehicletypeId");

                    b.ToTable("VEHICLE", (string)null);
                });

            modelBuilder.Entity("VehicleCardSystem.Core.Models.VehicleType", b =>
                {
                    b.Property<Guid>("VehicletypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("VEHICLETYPEID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasColumnName("BRAND");

                    b.Property<double>("CapacityKg")
                        .HasColumnType("REAL")
                        .HasColumnName("CAPACITYKG");

                    b.Property<double>("CapacityM3")
                        .HasColumnType("REAL")
                        .HasColumnName("CAPACITYM3");

                    b.Property<string>("ModelName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasColumnName("MODELNAME");

                    b.HasKey("VehicletypeId");

                    b.ToTable("VEHICLETYPE", (string)null);
                });

            modelBuilder.Entity("VehicleCardSystem.Core.Models.Vehicle", b =>
                {
                    b.HasOne("VehicleCardSystem.Core.Models.VehicleType", "VehicleTypes")
                        .WithMany("Vehicles")
                        .HasForeignKey("VehicletypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("VehicleTypes");
                });

            modelBuilder.Entity("VehicleCardSystem.Core.Models.VehicleType", b =>
                {
                    b.Navigation("Vehicles");
                });
#pragma warning restore 612, 618
        }
    }
}
